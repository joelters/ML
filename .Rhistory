X = data.frame(X1 = X1, X2 = X2)
ML = c("loglin")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
mm = MLest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
mcv <- MLtuning(X,Y,ML = ML, polynomial.loglin.grid = c(1,2), verbose = TRUE)
mcv$results_best
fvs = as.numeric(mcv$best.fvs.across.ml)
var(fvs)
# Load required library
library(ggplot2)
library(dplyr)
fvs0 = 1 + X1 + X2
dfpl = data.frame(fvs0 = fvs0, fvs = fvs)
# Order the data by fvs0
dfpl <- dfpl %>%
arrange(fvs0) %>%
mutate(index = row_number())
# Create the ggplot
ggplot(dfpl, aes(x = index)) +
geom_line(aes(y = fvs0, color = "fvs0"), size = 1) +
geom_line(aes(y = fvs, color = "fvs"), size = 1) +
labs(title = "Ordered Data Plot",
x = "Index",
y = "Values",
color = "Legend") +
theme_minimal()
# sign accuracy
n1 = n-1
sgnacc <- sapply(1:n1, function(uu){
uu1 <- uu + 1
aaa = (fvs[uu] > fvs[uu1:n]) - (fvs[uu] < fvs[uu1:n]) !=
(fvs0[uu] > fvs0[uu1:n]) - (fvs0[uu] < fvs0[uu1:n])
})
mean(unlist(sgnacc))
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)*0.1
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1, X2 = X2)
ML = c("loglin")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
mm = MLest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
mcv <- MLtuning(X,Y,ML = ML, polynomial.loglin.grid = c(1,2), verbose = TRUE)
mcv$results_best
fvs = as.numeric(mcv$best.fvs.across.ml)
var(fvs)
# Load required library
library(ggplot2)
library(dplyr)
fvs0 = exp(1 + X1 + X2)
dfpl = data.frame(fvs0 = fvs0, fvs = fvs)
# Order the data by fvs0
dfpl <- dfpl %>%
arrange(fvs0) %>%
mutate(index = row_number())
# Create the ggplot
ggplot(dfpl, aes(x = index)) +
geom_line(aes(y = fvs0, color = "fvs0"), size = 1) +
geom_line(aes(y = fvs, color = "fvs"), size = 1) +
labs(title = "Ordered Data Plot",
x = "Index",
y = "Values",
color = "Legend") +
theme_minimal()
# sign accuracy
n1 = n-1
sgnacc <- sapply(1:n1, function(uu){
uu1 <- uu + 1
aaa = (fvs[uu] > fvs[uu1:n]) - (fvs[uu] < fvs[uu1:n]) !=
(fvs0[uu] > fvs0[uu1:n]) - (fvs0[uu] < fvs0[uu1:n])
})
mean(unlist(sgnacc))
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1, X2 = X2)
ML = c("loglin")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
mm = MLest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
mcv <- MLtuning(X,Y,ML = ML, polynomial.loglin.grid = c(1,2), verbose = TRUE)
mcv$results_best
fvs = as.numeric(mcv$best.fvs.across.ml)
var(fvs)
# Load required library
library(ggplot2)
library(dplyr)
fvs0 = exp(1 + X1 + X2)
dfpl = data.frame(fvs0 = fvs0, fvs = fvs)
# Order the data by fvs0
dfpl <- dfpl %>%
arrange(fvs0) %>%
mutate(index = row_number())
# Create the ggplot
ggplot(dfpl, aes(x = index)) +
geom_line(aes(y = fvs0, color = "fvs0"), size = 1) +
geom_line(aes(y = fvs, color = "fvs"), size = 1) +
labs(title = "Ordered Data Plot",
x = "Index",
y = "Values",
color = "Legend") +
theme_minimal()
# sign accuracy
n1 = n-1
sgnacc <- sapply(1:n1, function(uu){
uu1 <- uu + 1
aaa = (fvs[uu] > fvs[uu1:n]) - (fvs[uu] < fvs[uu1:n]) !=
(fvs0[uu] > fvs0[uu1:n]) - (fvs0[uu] < fvs0[uu1:n])
})
mean(unlist(sgnacc))
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1, X2 = X2)
X = data.frame(rep(1,nrow(X)))
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1, X2 = X2)
X = data.frame(rep(1,nrow(X)))
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
View(X)
regs
params
formula_str
as.list(c(log(mean(Y)), rep(0, length(params))))
start_nlls
aa = X[,-1]
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1, X2 = X2)
X = data.frame(rep(1,nrow(X)))
X = X[,-1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
stats::model.matrix(~(.), data.frame(rep(1,3)))
ncol(X)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1, X2 = X2)
X = data.frame(rep(1,nrow(X)))
X = X[,-1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
MM
names(MM)
name(MM)
MM[1:5]
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
MM[1:4,]
aa = MM[1:4,]
as.matrix(aa[,1])
bb = as.matrix(aa[,1])
ncol(bb)
colnames(bb) = colnames(aa)[1]
bb
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1, X2 = X2)
X = data.frame(rep(1,nrow(X)))
X = X[,-1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
nls_formula
regs = colnames(X)
params <- paste0("beta", seq_along(regs))
names(params) <- regs
formula_str <- paste0("Y ~ exp(beta0 +", paste(params, regs, sep = "*", collapse = " + "), ")")
nls_formula = as.formula(formula_str)
regs
params
formula_str
nls_formula
start_nlls
nls_formula
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1, X2 = X2)
X = data.frame(rep(1,nrow(X)))
X = X[,-1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1, X2 = X2)
X = data.frame(rep(1,nrow(X)))
X = X[,-1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
nrow(X)
length(Y)
length(weights)
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
nrow(X)
length(Y)
length(weights)
weights
model = stats::nls(formula = nls_formula, data = data.frame(Y = Y, X),
start = start_nlls)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1, X2 = X2)
X = data.frame(rep(1,nrow(X)))
X = X[,-1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1, X2 = X2)
X = data.frame(rep(1,nrow(X)))
X = X[,-1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
mm = MLest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1, X2 = X2)
X = data.frame(rep(1,nrow(X)))
X = X[,-1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
mm = MLest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1, X2 = X2)
X = data.frame(rep(1,nrow(X)))
X = X[,-1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
mm = MLest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1, X2 = X2)
X = data.frame(rep(1,nrow(X)))
X = X[,-1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
mm = MLest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
m = modest(X,Y,ML=ML, polynomial.NLLS_exp = 2)
mm = MLest(X,Y,ML=ML, polynomial.NLLS_exp = 2)
X = data.frame(a = as.factor(c(1,2,3)))
as.tibble(X)
dplyr::as_tibble(X)
var(X[,1])
length(unique(X[, 1])) == 1
X = data.frame(a = as.factor(c(1,2,3)), b = a = as.factor(c(1,1,1)))
X = data.frame(a = as.factor(c(1,2,3)), b = as.factor(c(1,1,1)))
length(unique(X[, 2])) == 1
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1)
X[,-1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1)
X[,-1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
View(X)
View(X)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1)
X= X[,-1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1)
X= X[,1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
View(X)
View(X)
regs
formula_str
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1)
X= X[,1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
m = modest(X,Y,ML="RF", cf.depth = 2, mtry = 2, rf.cf.ntree = 50)
m = modest(X,Y,ML="RF", cf.depth = 2, mtry = 1, rf.cf.ntree = 50)
m = modest(X,Y,ML="Lasso", cf.depth = 2, mtry = 1, rf.cf.ntree = 50)
m = modest(X,Y,ML="Lasso", cf.depth = 2, mtry = 1, rf.cf.ntree = 50, polynomial.Lasso = 2)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1)
X= X[,1]
ML = c("NLLS_exp")
m = modest(X,Y,ML="Lasso", cf.depth = 2, mtry = 1, rf.cf.ntree = 50, polynomial.Lasso = 2)
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 1, rf.cf.ntree = 50, polynomial.Lasso = 2)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1)
X= X[,1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 1, rf.cf.ntree = 50, polynomial.Lasso = 2)
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 1, rf.cf.ntree = 50, polynomial.Lasso = 2)
class(X)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1)
X= X[,1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 1, rf.cf.ntree = 50, polynomial.Lasso = 2)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1)
X= X[,1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 1, rf.cf.ntree = 50, polynomial.Lasso = 2)
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 1, rf.cf.ntree = 50, polynomial.Lasso = 2)
regs
class(X)
colnames(X)
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 1, rf.cf.ntree = 50, polynomial.Lasso = 2)
colnames(X)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1)
X= X[,1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 1, rf.cf.ntree = 50, polynomial.Lasso = 2)
colnames(X)
rm(list = ls())
library(devtools)
document()
set.seed(1)
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1)
X= X[,1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 1, rf.cf.ntree = 50, polynomial.Lasso = 2)
X= X[,-1]
n = 5000
X1 = rnorm(n)
X2 = rnorm(n)
eps = rnorm(n)
Y = exp(1 + X1 + X2 + eps)
X = data.frame(X1 = X1)
X= X[,-1]
ML = c("NLLS_exp")
m = modest(X,Y,ML=ML, cf.depth = 2, mtry = 1, rf.cf.ntree = 50, polynomial.Lasso = 2)
