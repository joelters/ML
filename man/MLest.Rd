% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MLest.R
\name{MLest}
\alias{MLest}
\title{Estimate machine learning model and optionally give fitted values}
\usage{
MLest(
  X,
  Y,
  ML = c("Lasso", "Ridge", "RF", "CIF", "XGB", "CB", "Torch", "Logit_lasso", "OLS",
    "grf", "SL", "OLSensemble"),
  OLSensemble,
  SL.library,
  rf.cf.ntree = 500,
  rf.depth = NULL,
  mtry = max(floor(ncol(X)/3), 1),
  polynomial.Lasso = 1,
  polynomial.Ridge = 1,
  polynomial.Logit_lasso = 1,
  polynomial.OLS = 1,
  xgb.nrounds = 200,
  xgb.max.depth = 6,
  cb.iterations = 500,
  cb.depth = 6,
  torch.epochs = 50,
  torch.hidden_units = c(64, 32),
  torch.lr = 0.01,
  torch.dropout = 0.2,
  FVs = TRUE,
  ensemblefolds = 2,
  weights = NULL
)
}
\arguments{
\item{X}{is a dataframe containing all the features on which the
model was estimated}

\item{Y}{is a vector containing the labels for which the model
was estimated}

\item{ML}{is a string specifying which machine learner to use}

\item{OLSensemble}{is a string vector specifying which learners
should be used in OLS ensemble method}

\item{SL.library}{is a string vector specifying which learners
should be used in SuperLearner}

\item{rf.cf.ntree}{how many trees should be grown when using RF or CIF}

\item{rf.depth}{how deep should trees be grown in RF (NULL is default from ranger)}

\item{mtry}{how many variables to consider at each split in RF}

\item{polynomial.Lasso}{degree of polynomial to be fitted when using Lasso.
1 just fits the input X. 2 squares all variables and adds
all pairwise interactions. 3 squares and cubes all variables and adds all
pairwise and threewise interactions...}

\item{polynomial.Ridge}{degree of polynomial to be fitted when using Ridge,
see polynomial.Lasso for more info.}

\item{polynomial.Logit_lasso}{degree of polynomial to be fitted when using Logit_lasso,
see polynomial.Lasso for more info.}

\item{polynomial.OLS}{degree of polynomial to be fitted when using OLS,
see polynomial.Lasso for more info.}

\item{xgb.nrounds}{is an integer specifying how many rounds to use in XGB}

\item{xgb.max.depth}{is an integer specifying how deep trees should be grown in XGB}

\item{cb.iterations}{The maximum number of trees that can be built in CB}

\item{cb.depth}{The depth of the trees in CB}

\item{torch.epochs}{is an integer specifying the number of epochs (full passes through the dataset)
to use when training the Torch neural network.}

\item{torch.hidden_units}{is a numeric vector specifying the number of neurons
in each hidden layer of the Torch neural network.}

\item{torch.lr}{is a numeric value specifying the learning rate to be used for the
optimizer when training the Torch neural network.}

\item{torch.dropout}{is a numeric value between 0 and 1 specifying the dropout rate
for regularization in the Torch neural network.}

\item{FVs}{a logical indicating whether FVs should be computed}

\item{ensemblefolds}{number of folds to split in OLSensemble method}

\item{weights}{survey weights adding up to 1}
}
\value{
list containing model and fitted values
}
\description{
\code{MLest} estimates a machine learning model (Lasso, Ridge,
Random Forest, Conditional Inference Forest,
Extreme Gradient Boosting, Catboosting, Logit lasso or any
combination of these using the SuperLearner package) and (optionally)
returns the predicted fitted values.
}
\details{
See documentation of modest and FVest.
}
\examples{
X <- dplyr::select(mad2019,-Y)
Y <- mad2019$Y
m <- MLest(X, Y, "RF", FVs = TRUE)

m <- MLest(X, Y, "XGB", FVs = TRUE)

m <- MLest(X,Y,"SL",
ensemble = c("SL.Lasso","SL.RF","SL.XGB"),
FVs = TRUE)


}
