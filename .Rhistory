rf.depth = rf.depth,
polynomial = polynomial,
weights = weights)
pred[ind[[ii]]] = ML::FVest(mm,X[-ind[[ii]],],Y[-ind[[ii]]],
X[ind[[ii]],],Y[ind[[ii]]],ML = u,
polynomial = polynomial)
}
dfpred[,u] = pred
})
View(res)
dfpred = as.data.frame(res)
View(dfpred)
dfens = data.frame(Y = Y,dfpred)
View(dfens)
ols = lm(Y~., data = dfens)
summary(ols)
ols$coefficients
coefs = ols$coefficients
ms = lapply(ensemble, function(u){
ML::modest(X, Y, ML = u,
rf.cf.ntree = rf.cf.ntree,
rf.depth = rf.depth,
polynomial = polynomial,
weights = weights)
})
names(ms) = ensemble
View(ms)
ensemble = names(ms)
u = "RF"
ms$u
ms[u]
ms$RF
ms[u] == ms$RF
Xpred = matrix(rep(NA,n,length(ensemble)))
Xpred = matrix(rep(NA,n*length(ensemble)),n,length(ensemble))
?FVest
for (ii in 1:length(ensemble)){
Xpred[,ii] = ML::FVest(ms[[ii]], X, Y, Xnew, Ynew,
ML = ensemble[ii],polynomial = polynomial)
}
Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
Ynew = Xnew%*%c(1,1) + rnorm(500)
Xnew = as.data.frame(Xnew)
for (ii in 1:length(ensemble)){
Xpred[,ii] = ML::FVest(ms[[ii]], X, Y, Xnew, Ynew,
ML = ensemble[ii],polynomial = polynomial)
}
FVs = Xpred%*%coefs
Xpred = matrix(rep(NA,n*(length(ensemble)+1)),n,length(ensemble)+1)
Xpred = cbind(rep(1,nnew),Xpred)
nnew = length(Ynew)
ensemble = names(ms)
Xpred = matrix(rep(NA,nnew*length(ensemble)),nnew,length(ensemble))
for (ii in 1:length(ensemble)){
Xpred[,ii] = ML::FVest(ms[[ii]], X, Y, Xnew, Ynew,
ML = ensemble[ii],polynomial = polynomial)
}
Xpred = cbind(rep(1,nnew),Xpred)
View(Xpred)
FVs = Xpred%*%coefs
class(ms)
class(coefs)
document()
document()
?modest
rm(list = ls())
X <- dplyr::select(mad2019,-Y)
Y <- mad2019$Y
modest(X,Y,"OLSensemble")
document()
rm(list = ls())
X <- dplyr::select(mad2019,-Y)
Y <- mad2019$Y
modest(X,Y,"OLSensemble")
debug(modest)
modest(X,Y,"OLSensemble")
modest(X,Y,"OLSensemble")
modest(X,Y,"RF")
library(devtools)
document()
rm(list = ls())
X <- dplyr::select(mad2019,-Y)
Y <- mad2019$Y
debug(modest)
modest(X,Y,"OLSensemble")
undebug(modest)
modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
document()
modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
u
document()
modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
debug(modest)
modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
document()
undebug(modest)
modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
debug(modest)
modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
View(dfens)
View(dfpred)
document()
document()
modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
document()
modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
mens = modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
rm(list = ls())
X <- dplyr::select(mad2019,-Y)[1:1000,]
Y <- mad2019$Y[1:1000]
rm(list = ls())
X <- dplyr::select(mad2019,-Y)
Y <- mad2019$Y
rm(list = ls())
X <- dplyr::select(mad2019,-Y)[1:1000,]
Y <- mad2019$Y[1:1000]
Xnew = X[1001:1571,]
Ynew = Y[1001:1571]
mens = modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
fvs = FVest(mens,X,Y,Xnew,Ynew,ML = "OLSensemble", coefs = mens$coefs)
mens$coefs
class(mens$coefs)
document()
rm(list = ls())
X <- dplyr::select(mad2019,-Y)[1:1000,]
Y <- mad2019$Y[1:1000]
Xnew = X[1001:1571,]
Ynew = Y[1001:1571]
mens = modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
fvs = FVest(mens,X,Y,Xnew,Ynew,ML = "OLSensemble", coefs = mens$coefs)
debug(FVest)
fvs = FVest(mens,X,Y,Xnew,Ynew,ML = "OLSensemble", coefs = mens$coefs)
ensemble[ii]
ensemble
undebug(FVest)
fvs = FVest(mens$models,X,Y,Xnew,Ynew,ML = "OLSensemble", coefs = mens$coefs)
View(X)
sapply(X, anyNA)
sapply(Xnew, anyNA)
rm(list = ls())
X <- dplyr::select(mad2019,-Y)[1:1000,]
Y <- mad2019$Y[1:1000]
Xnew = dplyr::select(mad2019,-Y)[1001:1571,]
Ynew = mad2019$Y[1001:1571]
mens = modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
fvs = FVest(mens$models,X,Y,Xnew,Ynew,ML = "OLSensemble", coefs = mens$coefs)
ml = MLest(X,Y,ML = "OLSensemble",ensemble = c("RF","XGB","OLS"))
document()
rm(list = ls())
X <- dplyr::select(mad2019,-Y)[1:1000,]
Y <- mad2019$Y[1:1000]
Xnew = dplyr::select(mad2019,-Y)[1001:1571,]
Ynew = mad2019$Y[1001:1571]
mens = modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
fvs = FVest(mens$models,X,Y,Xnew,Ynew,ML = "OLSensemble", coefs = mens$coefs)
ml = MLest(X,Y,ML = "OLSensemble",ensemble = c("RF","XGB","OLS"))
ml = MLest(X,Y,ML = "OLSensemble",ensemble = c("RF","XGB","OLS"))
mens = modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB","OLS"))
debug(modest)
mens = modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB","OLS"))
View(X)
sapply(X,function(u){length(unique(u))})
sapply(X,function(u){var(u)})
var(X[,"contnatMDead/missing"])
apply(X,var,2)
?apply
apply(X,2,var)
solve(t(X)%*%X)
undebug(modest)
rm(list = ls())
X <- dplyr::select(mad2019,-Y)[1:1000,]
Y <- mad2019$Y[1:1000]
Xnew = dplyr::select(mad2019,-Y)[1001:1571,]
Ynew = mad2019$Y[1001:1571]
mens = modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB","OLS"))
fvs = FVest(mens$models,X,Y,Xnew,Ynew,ML = "OLSensemble", coefs = mens$coefs)
ml = MLest(X,Y,ML = "OLSensemble",ensemble = c("RF","XGB","OLS"))
document()
mlcv = MLcv(X,Y,ML = c("RF","XGB","OLSensemble"))
document()
mlcv = MLcv(X,Y,ML = c("RF","XGB","OLSensemble"))
document()
mlcv = MLcv(X,Y,ML = c("RF","XGB","OLSensemble"))
debug(MLcv)
mlcv = MLcv(X,Y,ML = c("RF","XGB","OLSensemble"))
document()
mlcv = MLcv(X,Y,ML = c("RF","XGB","OLSensemble"))
document()
document()
mlcv = MLcv(X,Y,ML = c("RF","XGB","OLSensemble"))
mlcv = MLcv(X,Y,ML = c("RF","XGB","OLSensemble"), ensemble = c("RF","XGB"))
mlcv$mlbest
mlcv$rmse
document()
mlcv = MLcv(X,Y,ML = c("RF","XGB","OLSensemble"), ensemble = c("RF","XGB"))
mlcv$rmses
mlcv = MLcv(X,Y,ML = c("RF","XGB", "CB", "Lasso", "OLSensemble"),
ensemble = c("RF","XGB", "CB", "Lasso",))
document()
mlcv = MLcv(X,Y,ML = c("RF","XGB", "CB", "Lasso", "OLSensemble"),
ensemble = c("RF","XGB", "CB", "Lasso"))
mlcv$rmses
document()
mlcv = MLcv(X,Y,ML = c("RF","XGB", "OLSensemble"),
ensemble = c("RF","XGB"), verbose = TRUE)
document()
ptm = proc.time()
mens = modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
proc.time - ptm
ptm = proc.time()
mens = modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
proc.time() - ptm
ptm = proc.time()
mens = modest(X,Y, ML = "SuperLearner", ensemble = c("RF","XGB"))
ptm = proc.time()
mens = modest(X,Y, ML = "SL", ensemble = c("RF","XGB"))
proc.time() - ptm
ptm = proc.time()
mens = modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"))
proc.time() - ptm
ptm = proc.time()
mens = modest(X,Y, ML = "SL", ensemble = c("RF","XGB"))
proc.time() - ptm
ptm = proc.time()
mens = modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"), ensemblefolds = 5)
proc.time() - ptm
ptm = proc.time()
mens = modest(X,Y, ML = "SL", ensemble = c("RF","XGB"), ensemblefolds = 5)
proc.time() - ptm
ptm = proc.time()
mens = modest(X,Y, ML = "OLSensemble", ensemble = c("RF","XGB"), ensemblefolds = 5)
proc.time() - ptm
ptm = proc.time()
mens = modest(X,Y, ML = "SL", ensemble = c("RF","XGB"), ensemblefolds = 5)
proc.time() - ptm
mlcv = MLcv(X,Y,ML = c("OLSensemble", "SL"),
ensemble = c("RF","XGB"),
ensemblefolds = 2,
verbose = TRUE)
mlcv$rmses
library(SuperLearner)
?SuperLearner
library(devtools)
document()
?modest
document()
?modest
?MLest
mm = MLest(X,Z,ML = "SL", SL.library = "SL.ranger")
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- rnorm(100)  # Response variable
mm = MLest(X,Z,ML = "SL", SL.library = "SL.ranger")
mm = MLest(X,ZYML = "SL", SL.library = "SL.ranger")
mm = MLest(X,Y,ML = "SL", SL.library = "SL.ranger")
aa = SuperLearner(Y,X,SL.library = "SL.ranger")
library(SuperLearner)
aa = SuperLearner(Y,X,SL.library = "SL.ranger")
Y <- X%*%rep(1,10) + rnorm(100)  # Response variable
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
mm = MLest(X,Y,ML = "SL", SL.library = "SL.ranger")
aa = SuperLearner(Y,X,SL.library = "SL.ranger")
aa$SL.predict
aaaa = aa$SL.predict
bbbb = mm$FVs
document()
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
mm = MLest(X,Y,ML = "SL", SL.library = "SL.ranger")
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
mm = MLest(X,Y,ML = "SL", SL.library = "SL.ranger")
library(SuperLearner)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
mm = MLest(X,Y,ML = "SL", SL.library = "SL.ranger")
debug(MLest)
mm = MLest(X,Y,ML = "SL", SL.library = "SL.ranger")
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
mm = MLest(X,Y,ML = "SL", SL.library = "SL.ranger")
debug(MLest)
mm = MLest(X,Y,ML = "SL", SL.library = "SL.ranger")
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
mm = MLest(X,Y,ML = "SL", SL.library = "SL.ranger")
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
mm = MLest(X,Y,ML = "SL", SL.library = "SL.ranger")
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
mm = MLest(X,Y,ML = "SL", SL.library = "SL.ranger")
document()
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
debug(MLest)
mm = MLest(X,Y,ML = "SL", SL.library = "SL.ranger")
library(devtools)
document()
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
mm = modest(X[1:900,],Y[1:900],ML = "SL", SL.library = "SL.ranger")
mm = modest(X[1:90,],Y[1:90],ML = "SL", SL.library = "SL.ranger")
fvs = FVest(mm,X,Y,Xnew = X[91:100,], Y = Y[91:100], ML = "SL")
debug(FVest)
fvs = FVest(mm,X,Y,Xnew = X[91:100,], Y = Y[91:100], ML = "SL")
fvs = FVest(mm,X,Y,Xnew = X[91:100,], Y = Y[91:100], ML = "SL")
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
mm = modest(X[1:90,],Y[1:90],ML = "SL", SL.library = "SL.ranger")
fvs = FVest(mm,X,Y,Xnew = X[91:100,], Y = Y[91:100], ML = "SL")
debug(FVest)
fvs = FVest(mm,X,Y,Xnew = X[91:100,], Y = Y[91:100], ML = "SL")
document()
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
mm = modest(X[1:90,],Y[1:90],ML = "SL", SL.library = "SL.ranger")
fvs = FVest(mm,X,Y,Xnew = X[91:100,], Y = Y[91:100], ML = "SL")
class(X)
?xgboost
