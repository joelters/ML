% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MLest.R
\name{MLest}
\alias{MLest}
\title{Estimate machine learning model and optionally give fitted values}
\usage{
MLest(
  X,
  Y,
  ML = c("Lasso", "Ridge", "RF", "CIF", "XGB", "CB", "Logit_lasso", "SL"),
  ensemble = c("SL.Lasso", "SL.Ridge", "SL.RF", "SL.CIF", "SL.XGB", "SL.CB"),
  rf.cf.ntree = 500,
  rf.depth = NULL,
  polynomial = 1,
  FVs = TRUE,
  weights = NULL
)
}
\arguments{
\item{X}{is a dataframe containing all the features on which the
model was estimated}

\item{Y}{is a vector containing the labels for which the model
was estimated}

\item{ML}{is a string specifying which machine learner to use}

\item{ensemble}{is a string vector specifying which learners
should be used in the SuperLearner}

\item{rf.cf.ntree}{how many trees should be grown when using RF or CIF}

\item{rf.depth}{how deep should trees be grown in RF (NULL is default from ranger)}

\item{polynomial}{degree of polynomial to be fitted when using Lasso, Ridge
or Logit Lasso. 1 just fits the input X. 2 squares all variables and adds
all pairwise interactions. 3 squares and cubes all variables and adds all
pairwise and threewise interactions...}

\item{FVs}{a logical indicating whether FVs should be computed}

\item{weights}{survey weights adding up to 1}
}
\value{
list containing model and fitted values
}
\description{
\code{MLest} estimates a machine learning model (Lasso, Ridge,
Random Forest, Conditional Inference Forest,
Extreme Gradient Boosting, Catboosting, Logit lasso or any
combination of these using the SuperLearner package) and (optionally)
returns the predicted fitted values.
}
\details{
See documentation of modest and FVest.
}
\examples{
X <- dplyr::select(mad2019,-Y)
Y <- mad2019$Y
m <- MLest(X, Y, "RF", FVs = TRUE)

m <- MLest(X, Y, "XGB", FVs = TRUE)

m <- MLest(X,Y,"SL",
ensemble = c("SL.Lasso","SL.RF","SL.XGB"),
FVs = TRUE)


}
