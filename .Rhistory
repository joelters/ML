xgb.nrounds.grid = c(100, 200, 500),
xgb.max.depth.grid = c(1, 3, 6))
debug(MLtuning)
a = MLtuning(X,Y,ML = c("Lasso","RF","XGB","OLSensemble"),
OLSensemble = c("Lasso","RF","XGB"),
rf.cf.ntree.grid = c(100, 300, 500),
rf.depth.grid = c(2, 4, 6, 10),
mtry.grid = c(1, 3, 5),
ensemblefolds.grid = c(2, 5),
polynomial.grid = c(1, 2, 3),
xgb.nrounds.grid = c(100, 200, 500),
xgb.max.depth.grid = c(1, 3, 6))
document()
undebug(MLtuning)
library(devtools)
document()
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
a = MLtuning(X,Y,ML = c("Lasso","RF","XGB","OLSensemble"),
OLSensemble = c("Lasso","RF","XGB"),
rf.cf.ntree.grid = c(100, 300, 500),
rf.depth.grid = c(2, 4, 6, 10),
mtry.grid = c(1, 3, 5),
ensemblefolds.grid = c(2, 5),
polynomial.grid = c(1, 2, 3),
xgb.nrounds.grid = c(100, 200, 500),
xgb.max.depth.grid = c(1, 3, 6))
res
library(devtools)
document()
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
a = MLtuning(X,Y,ML = c("Lasso","RF","XGB","OLSensemble"),
OLSensemble = c("Lasso","RF","XGB"),
rf.cf.ntree.grid = c(100, 300, 500),
rf.depth.grid = c(2, 4, 6, 10),
mtry.grid = c(1, 3, 5),
ensemblefolds.grid = c(2, 5),
polynomial.grid = c(1, 2, 3),
xgb.nrounds.grid = c(100, 200, 500),
xgb.max.depth.grid = c(1, 3, 6))
library(devtools)
document()
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
a = MLtuning(X,Y,ML = c("Lasso","RF","XGB","OLSensemble"),
OLSensemble = c("Lasso","RF","XGB"),
rf.cf.ntree.grid = c(100, 300, 500),
rf.depth.grid = c(2, 4, 6, 10),
mtry.grid = c(1, 3, 5),
ensemblefolds.grid = c(2, 5),
polynomial.grid = c(1, 2, 3),
xgb.nrounds.grid = c(100, 200, 500),
xgb.max.depth.grid = c(1, 3, 6))
library(devtools)
document()
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
a = MLtuning(X,Y,ML = c("Lasso","RF","XGB","OLSensemble"),
OLSensemble = c("Lasso","RF","XGB"),
rf.cf.ntree.grid = c(100, 300, 500),
rf.depth.grid = c(2, 4, 6, 10),
mtry.grid = c(1, 3, 5),
ensemblefolds.grid = c(2, 5),
polynomial.grid = c(1, 2, 3),
xgb.nrounds.grid = c(100, 200, 500),
xgb.max.depth.grid = c(1, 3, 6))
a = MLtuning(X,Y,ML = c("Lasso","RF","XGB","OLSensemble"),
OLSensemble = c("Lasso","RF","XGB"),
rf.cf.ntree.grid = c(100, 300, 500),
rf.depth.grid = c(2, 4, 6, 10),
mtry.grid = c(1, 3, 5),
ensemblefolds.grid = c(2, 5),
polynomial.grid = c(1, 2, 3),
xgb.nrounds.grid = c(100, 200, 500),
xgb.max.depth.grid = c(1, 3, 6))
library(devtools)
document()
a = MLtuning(X,Y,ML = c("Lasso","RF","XGB","OLSensemble"),
OLSensemble = c("Lasso","RF","XGB"),
rf.cf.ntree.grid = c(100, 300, 500),
rf.depth.grid = c(2, 4, 6, 10),
mtry.grid = c(1, 3, 5),
ensemblefolds.grid = c(2, 5),
polynomial.grid = c(1, 2, 3),
xgb.nrounds.grid = c(100, 200, 500),
xgb.max.depth.grid = c(1, 3, 6))
OLSensemble
restuning
restuning[[1]]
restuning[[1]][which.min(restuning[[1]]$rmse)]
restuning[[1]][which.min(restuning[[1]]$rmse),]
library(devtools)
document()
a = MLtuning(X,Y,ML = c("Lasso","RF","XGB","OLSensemble"),
OLSensemble = c("Lasso","RF","XGB"),
rf.cf.ntree.grid = c(100, 300, 500),
rf.depth.grid = c(2, 4, 6, 10),
mtry.grid = c(1, 3, 5),
ensemblefolds.grid = c(2, 5),
polynomial.grid = c(1, 2, 3),
xgb.nrounds.grid = c(100, 200, 500),
xgb.max.depth.grid = c(1, 3, 6))
restuning
restuning
res0
restuning
library(devtools)
document()
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
a = MLtuning(X,Y,ML = c("Lasso","RF","XGB","OLSensemble"),
OLSensemble = c("Lasso","RF","XGB"),
rf.cf.ntree.grid = c(100, 300, 500),
rf.depth.grid = c(2, 4, 6, 10),
mtry.grid = c(1, 3, 5),
ensemblefolds.grid = c(2, 5),
polynomial.grid = c(1, 2, 3),
xgb.nrounds.grid = c(100, 200, 500),
xgb.max.depth.grid = c(1, 3, 6))
a$results
a$best.across.ml
warning("dsad")
warning("No hyperparameter tuning for CB yet, default ML parameters are used")
library(devtools)
document()
aa = MLtuning(X,Y, ML = c("Lasso", "Ridge", "RF", "CIF", "XGB", "CB"))
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
aa = MLtuning(X,Y, ML = c("Lasso", "Ridge", "RF", "CIF", "XGB", "CB"))
debug(MLtuning)
aa = MLtuning(X,Y, ML = c("Lasso", "Ridge", "RF", "CIF", "XGB", "CB"))
undebug(MLtuning)
aa = MLtuning(X,Y, ML = c("Ridge", "RF", "CIF", "XGB", "CB"))
aa = MLtuning(X,Y, ML = c("CB"))
aa = MLtuning(X,Y, ML = c("Lasso", "Ridge", "RF", "CIF", "XGB"))
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
aa = MLtuning(X,Y, ML = c("Lasso", "Ridge", "RF", "CIF", "XGB"))
aa = MLtuning(X,Y, ML = c("CB"))
?catboost
library(catboost)
?catboost
?catboost.train
aa = MLtuning(X,Y, ML = c("CB"))
undebug(MLtuning)
aa = MLtuning(X,Y, ML = c("CB"))
a
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
aa = MLtuning(X,Y, ML = c("CB"))
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
aa = MLtuning(X,Y, ML = c("CB"))
aa$results
library(devtools)
document()
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
m = modest(X,Y,ML = "OLSensemble", OLSensemble = c("RF","XGB"))
fvs = FVest(m,X,Y,X[1:3,],Y[1:3],ML = "OLSensemble", coefs = m$coefs)
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
m = modest(X,Y,ML = "OLSensemble", OLSensemble = c("RF","XGB"))
fvs = FVest(m,X,Y,X[1:3,],Y[1:3],ML = "OLSensemble", coefs = m$coefs)
?FVest
fvs = FVest(m,X,Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
fvs = FVest(model = m,X = X,Y = Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
fvs = FVest(model = m,X = X,Y = Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
debug(FVest)
fvs = FVest(model = m,X = X,Y = Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
library(devtools)
document()
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
m = modest(X,Y,ML = "OLSensemble", OLSensemble = c("RF","XGB"))
fvs = FVest(model = m,X = X,Y = Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
# aa = MLtuning(X,Y, ML = c("CB"))
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
m = modest(X,Y,ML = "OLSensemble", OLSensemble = c("RF","XGB"))
fvs = FVest(model = m,X = X,Y = Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
# aa = MLtuning(X,Y, ML = c("CB"))
Xpred
Xnew
length(model$forest$independent.variable.names) == length(names(Xnew)))
length(model$forest$independent.variable.names) == length(names(Xnew))
length(model$forest$independent.variable.names)
model$RF$forest$independent.variable.names
names(Xnew)
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
m = modest(X,Y,ML = "OLSensemble", OLSensemble = c("RF","XGB"))
fvs = FVest(model = m,X = X,Y = Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
# aa = MLtuning(X,Y, ML = c("CB"))
aaa = model[[ii]]
model$models[[ii]]
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
m = modest(X,Y,ML = "OLSensemble", OLSensemble = c("RF","XGB"))
fvs = FVest(model = m,X = X,Y = Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
# aa = MLtuning(X,Y, ML = c("CB"))
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
debug(MLest)
m = MLest(X,Y,ML = "OLSensemble", OLSensemble = c("RF","XGB"))
m = MLest(X,Y,ML = "OLSensemble", OLSensemble = c("RF","XGB"))
m$coefs
coefs
names(model)
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
m = MLest(X,Y,ML = "OLSensemble", OLSensemble = c("RF","XGB"))
fvs = FVest(model = m,X = X,Y = Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
debug(FVest)
fvs = FVest(model = m,X = X,Y = Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
m = MLest(X,Y,ML = "OLSensemble", OLSensemble = c("RF","XGB"))
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
m = MLest(X,Y,ML = "OLSensemble", OLSensemble = c("RF","XGB"))
fvs = FVest(model = m,X = X,Y = Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
debug(FVest)
fvs = FVest(model = m,X = X,Y = Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
m = MLest(X,Y,ML = "OLSensemble", OLSensemble = c("RF","XGB"))
fvs = FVest(model = m,X = X,Y = Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
debug(FVest)
fvs = FVest(model = m,X = X,Y = Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
ML
model$model
names(model$model)
names(model$model$models)
length(m)
"FVs" %in% names(m)
m = list(models = m$model, coefs = m$coefs)
undebug(FVest)
fvs = FVest(model = m,X = X,Y = Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
debug(FVest)
fvs = FVest(model = m,X = X,Y = Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
names(model$models)
names(m$models)
m = MLest(X,Y,ML = "OLSensemble", OLSensemble = c("RF","XGB"))
undebug(MLest)
undebug(FVest)
m = MLest(X,Y,ML = "OLSensemble", OLSensemble = c("RF","XGB"))
names(m$model$models)
m = list(models = m$model$models, coefs = m$coefs)
fvs = FVest(model = m,X = X,Y = Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
names(m)
library(devtools)
document()
# X = matrix(c(rnorm(1000),rnorm(1000)),1000,2)
# Y = X%*%c(1,1) + rnorm(1000)
# X = as.data.frame(X)
#
# ensemble = c("RF","CB")
# rf.cf.ntree = 500
# rf.depth = NULL
# polynomial = 1
# OLSensemblefolds = 2
# weights = NULL
#
# Xnew = matrix(c(rnorm(500),rnorm(500)),500,2)
# Ynew = Xnew%*%c(1,1) + rnorm(500)
# Xnew = as.data.frame(Xnew)
set.seed(123)  # Same seed for reproducibility
X <- as.data.frame(matrix(rnorm(1000), ncol = 10))  # 100 rows, 10 features
Y <- as.matrix(X)%*%rep(1,10) + rnorm(100)  # Response variable
m = MLest(X,Y,ML = "OLSensemble", OLSensemble = c("RF","XGB"))
fvs = FVest(model = m,X = X,Y = Y,Xnew = X[1:3,],Ynew = Y[1:3],ML = "OLSensemble", coefs = m$coefs)
# aa = MLtuning(X,Y, ML = c("CB"))
